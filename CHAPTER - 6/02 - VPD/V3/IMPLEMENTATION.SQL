-- SYS
CREATE ROLE CLERK_ROLE
/

CREATE ROLE MANAGER_ROLE
/

CREATE ROLE ADMIN_ROLE
/

GRANT CLERK_ROLE TO VPD_CLERK1
/

GRANT MANAGER_ROLE TO VPD_CLERK2
/

GRANT ADMIN_ROLE TO VPD_CLERK3
/

GRANT SELECT ON DBA_ROLE_PRIVS TO DBSEC
/

-- DBSEC
CREATE OR REPLACE CONTEXT DBSEC_ROLE_SECURITY_LEVEL
    USING PKG_DBSEC_ROLE_SECURITY_LEVEL
/

CREATE OR REPLACE PACKAGE PKG_DBSEC_ROLE_SECURITY_LEVEL IS
    PROCEDURE SET_CONTEXT(P_ROLE VARCHAR2 DEFAULT NULL);
END;
/

CREATE OR REPLACE PACKAGE BODY PKG_DBSEC_ROLE_SECURITY_LEVEL IS
    PROCEDURE SET_CONTEXT(P_ROLE VARCHAR2 DEFAULT NULL) IS
    V_USER VARCHAR2(30);
    V_ROLE VARCHAR2(30);
    V_LEVEL NUMBER;
BEGIN
    V_USER := USER;
    V_ROLE := P_ROLE;

    IF P_ROLE IS NULL THEN
        SELECT GRANTED_ROLE
        INTO V_ROLE
        FROM DBA_ROLE_PRIVS
        WHERE GRANTEE = V_USER;
    END IF;

    IF V_ROLE = 'CLERK_ROLE' THEN
        V_LEVEL := 2;
    ELSIF V_ROLE = 'MANAGER_ROLE' THEN
        V_LEVEL := 3;
    ELSIF V_ROLE = 'ADMIN_ROLE' THEN
        V_LEVEL := 4;
    ELSE
        V_LEVEL := 0;
    END IF;

    DBMS_SESSION.SET_CONTEXT('DBSEC_ROLE_SECURITY_LEVEL', 'SECURITY_LEVEL', V_LEVEL);

    EXCEPTION WHEN OTHERS THEN 
        DBMS_OUTPUT.PUT_LINE(SQLERRM);
        RETURN;
    END;
END;
/

GRANT EXECUTE ON PKG_DBSEC_ROLE_SECURITY_LEVEL TO VPD_CLERK1, VPD_CLERK2, VPD_CLERK3
/

CREATE OR REPLACE FUNCTION DBSEC_ROLE_SECURITY_LEVEL(
    P_SCHEMA_NAME IN VARCHAR2, 
    P_OBJECT_NAME IN VARCHAR2
) RETURN VARCHAR2 IS V_WHERE VARCHAR2(4000);
BEGIN
    V_WHERE := 'TO_NUMBER(CTL_REC_STAT) <= ' || nvl(SYS_CONTEXT('DBSEC_ROLE_SECURITY_LEVEL', 'SECURITY_LEVEL'), 0);
    RETURN V_WHERE;
END;
/

BEGIN
    DBMS_RLS.ADD_POLICY(
        OBJECT_SCHEMA    => 'DBSEC',
        OBJECT_NAME      => 'CUSTOMERS',
        POLICY_NAME      => 'DBSEC_ROLE_SECURITY_POLICY',
        FUNCTION_SCHEMA  => 'DBSEC',
        POLICY_FUNCTION  => 'DBSEC_ROLE_SECURITY_LEVEL',
        STATEMENT_TYPES  => 'SELECT, UPDATE, DELETE',
        ENABLE           => TRUE
    );
END;
/

-- VPD_CLERK
SELECT SYS_CONTEXT('DBSEC_ROLE_SECURITY_LEVEL', 'SECURITY_LEVEL')
FROM DUAL 
/

SELECT COUNT(*) FROM DBSEC.CUSTOMERS
/

BEGIN
    DBSEC.PKG_DBSEC_ROLE_SECURITY_LEVEL.SET_CONTEXT;
END;

SELECT SYS_CONTEXT('DBSEC_ROLE_SECURITY_LEVEL', 'SECURITY_LEVEL')
FROM DUAL 
/

SELECT COUNT(*) FROM DBSEC.CUSTOMERS
/

-- DBSEC
-- DEACTIVATE THE POLICY
BEGIN
    DBMS_RLS.ENABLE_POLICY(
        OBJECT_SCHEMA => 'DBSEC',
        OBJECT_NAME => 'CUSTOMERS',
        POLICY_NAME => 'DBSEC_ROLE_SECURITY_POLICY',
        ENABLE => TRUE
    );
END;