
--
DROP TABLE DB_AUDIT.APP_ENTITY;

CREATE TABLE DB_AUDIT.APP_ENTITY (
    ENTITY_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    ENTITY_NAME VARCHAR2(255) NOT NULL,
    ENTITY_TYPE VARCHAR2(255) NOT NULL,
    CTL_REC_STAT CHAR(1) DEFAULT 'A' CHECK(CTL_REC_STAT IN ('A', 'I'))
);

SELECT * FROM DB_AUDIT.APP_ENTITY;

DELETE FROM DB_AUDIT.APP_ENTITY;

INSERT INTO DB_AUDIT.APP_ENTITY (ENTITY_NAME, ENTITY_TYPE) 
VALUES ('SCOTT', 'USER');

INSERT INTO DB_AUDIT.APP_ENTITY (ENTITY_NAME, ENTITY_TYPE) 
VALUES ('TEST_TABLE', 'TABLE');

COMMIT;

--
DROP TABLE DB_AUDIT.APP_ACTION_TYPE;

CREATE TABLE DB_AUDIT.APP_ACTION_TYPE (
    ACTION_TYPE_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    ACTION_TYPE_DESC VARCHAR2(255) NOT NULL,
    CTL_REC_STAT CHAR(1) DEFAULT 'A' CHECK(CTL_REC_STAT IN ('A', 'I'))
)

SELECT * FROM DB_AUDIT.APP_ACTION_TYPE;

DELETE FROM DB_AUDIT.APP_ACTION_TYPE;

INSERT INTO DB_AUDIT.APP_ACTION_TYPE (ACTION_TYPE_DESC)
VALUES ('UPDATE');

INSERT INTO DB_AUDIT.APP_ACTION_TYPE (ACTION_TYPE_DESC)
VALUES ('INSERT');

INSERT INTO DB_AUDIT.APP_ACTION_TYPE (ACTION_TYPE_DESC)
VALUES ('DELETE');

COMMIT;

--
DROP TABLE DB_AUDIT.APP_AUDIT_ACTION;

CREATE TABLE DB_AUDIT.APP_AUDIT_ACTION (
    AUDIT_ACTION_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    ENTITY_ID NUMBER NOT NULL,
    ACTION_TYPE_ID NUMBER NOT NULL,
    AUDIT_START_DATE TIMESTAMP DEFAULT SYSTIMESTAMP,
    AUDIT_EXPIRY_DATE TIMESTAMP,
    CTL_INS_DTTM TIMESTAMP DEFAULT SYSTIMESTAMP,
    CTL_UPD_DTTM TIMESTAMP,
    CTL_UPD_USER VARCHAR2(255) DEFAULT USER,
    CTL_REC_STAT CHAR(1) DEFAULT 'A' CHECK (CTL_REC_STAT IN ('A', 'I')),

    CONSTRAINT FK_ENTITY_ID FOREIGN KEY (ENTITY_ID) REFERENCES DB_AUDIT.APP_ENTITY(ENTITY_ID),
    CONSTRAINT FK_ACTION_TYPE_ID FOREIGN KEY (ACTION_TYPE_ID) REFERENCES DB_AUDIT.APP_ACTION_TYPE(ACTION_TYPE_ID)
);

SELECT * FROM DB_AUDIT.APP_AUDIT_ACTION;

DELETE FROM DB_AUDIT.APP_AUDIT_ACTION;

INSERT INTO DB_AUDIT.APP_AUDIT_ACTION (ENTITY_ID, ACTION_TYPE_ID)
VALUES (1, 1);

INSERT INTO DB_AUDIT.APP_AUDIT_ACTION (ENTITY_ID, ACTION_TYPE_ID)
VALUES (1, 2);

INSERT INTO DB_AUDIT.APP_AUDIT_ACTION (ENTITY_ID, ACTION_TYPE_ID)
VALUES (1, 3);

INSERT INTO DB_AUDIT.APP_AUDIT_ACTION (ENTITY_ID, ACTION_TYPE_ID)
VALUES (2, 1);

COMMIT;

--
DROP TABLE DB_AUDIT.APP_AUDIT_DATA;

CREATE TABLE DB_AUDIT.APP_AUDIT_DATA (
    AUDIT_DATA_ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    AUDIT_ACTION_ID NUMBER NOT NULL,
    AUDIT_DATA VARCHAR2(4000) NOT NULL,
    AUD_INS_DTTM TIMESTAMP DEFAULT SYSTIMESTAMP,
    AUD_UPD_DTTM TIMESTAMP,
    AUD_UPD_USER VARCHAR2(255) DEFAULT USER,
    AUD_REC_STAT CHAR(1) DEFAULT 'A' CHECK (AUD_REC_STAT IN ('A', 'I')),

    CONSTRAINT FK_AUDIT_ACTION_ID FOREIGN KEY (AUDIT_ACTION_ID) REFERENCES DB_AUDIT.APP_AUDIT_ACTION(AUDIT_ACTION_ID)
)

SELECT * FROM DB_AUDIT.APP_AUDIT_DATA;

--
CREATE TABLE DB_AUDIT.TEST_TABLE (
    ID NUMBER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    USERNAME VARCHAR2(255) DEFAULT USER,
    PHONE VARCHAR2(10) NOT NULL,
    EMAIL VARCHAR2(200) NOT NULL
);

SELECT * FROM DB_AUDIT.TEST_TABLE;


-- 
CREATE OR REPLACE TRIGGER DB_AUDIT.TRG_AUDIT_MODEL_1
AFTER UPDATE OR DELETE OR INSERT ON DB_AUDIT.TEST_TABLE
FOR EACH ROW
DECLARE
    v_entity_id NUMBER;
    v_audit_action_id NUMBER;

    V_AUDIT_ACTION_ID NUMBER;
    V_USER VARCHAR2(255) := USER;
    V_ACTION_TYPE VARCHAR2(50);
    
BEGIN
    SELECT ENTITY_ID INTO V_ENTITY_ID FROM DB_AUDIT.APP_ENTITY WHERE ENTITY_NAME = V_USER;



    -- Determine the action type
    IF INSERTING THEN
        V_ACTION_TYPE := 'INSERT';
    ELSIF UPDATING THEN
        V_ACTION_TYPE := 'UPDATE';
    ELSIF DELETING THEN
        V_ACTION_TYPE := 'DELETE';
    END IF;


    -- Get the Audit Action Id
    -- SELECT 


    -- Get Entity ID
    SELECT ENTITY_ID INTO v_entity_id FROM DB_AUDIT.APP_ENTITY WHERE ENTITY_NAME = '';
    
    
    -- Insert into APP_AUDIT_ACTION if not exists
    INSERT INTO DB_AUDIT.APP_AUDIT_ACTION (ENTITY_ID, ACTION_TYPE)
    VALUES (v_entity_id, v_action_type)
    RETURNING AUDIT_ACTION_ID INTO v_audit_action_id;
    
    -- Insert into APP_AUDIT_DATA
    INSERT INTO DB_AUDIT.APP_AUDIT_DATA (AUDIT_ACTION_ID, CTL_UPD_USER_USER, AUDIT_DATA)
    VALUES (v_audit_action_id, USER, 'Action: ' || v_action_type || ' performed on APP_USERS');
END;
/


-- 
CREATE OR REPLACE TRIGGER audit_all_dml_schema
AFTER INSERT OR UPDATE OR DELETE ON SCHEMA
DECLARE
    V_TEXT VARCHAR2(255) := 'HELLO';
BEGIN
    DBMS_OUTPUT.PUT_LINE(V_TEXT);
END;